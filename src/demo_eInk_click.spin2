'' =================================================================================================
''
''   File....... demo_eInk_click.spin2
''   Purpose.... Demonstrate interaction with the Mikroe eInk Click module w/display
''   Authors.... Stephen M Moraco
''               -- Copyright (c) 2022 Iron Sheep Productions, LLC
''               -- see below for terms of use
''   E-mail..... stephen@ironsheep.biz
''   Started.... Jun 2022
''   Updated.... 05 Jun 2022
''
'' =================================================================================================

CON { timing }

  CLK_FREQ = 270_000_000                                        ' system freq as a constant
  _clkfreq = CLK_FREQ                                           ' set system clock

CON { fixed io pins }

  RX1      = 63  { I }                                          ' programming / debug
  TX1      = 62  { O }

  SF_CS    = 61  { O }                                          ' serial flash
  SF_SCK   = 60  { O }
  SF_SDO   = 59  { O }
  SF_SDI   = 58  { I }

CON { click module io pins }

    ' our Click module is on 16-31!
    EINK_CLICK_PINGROUP = eInkDisplay.PINS_P16_P31

OBJ { the object being demo'd }

    eInkDisplay : "isp_eInk_click"
    eInkImages  : "isp_eInk_demo_images"

PUB main() | ok, deviceID, uniqMSB, uniqLSB
'' DEMO let's see what our radio hears!

    ' tell object where the module is connected
    ok := eInkDisplay.start(EINK_CLICK_PINGROUP)
    if not ok
        debug("* SPI FAILED to start")
    else
        debug("* SPI started OK")



    'text_demo()

    image_demo()    ' 43 * 2 seconds runtime!

    'repeat 10
    '    image_demo()

    eInkDisplay.stop()

DAT { demonstration data }

    demo_text       BYTE  "eINK" , 0
    demo_text1      BYTE  "Display", 0
    demo_text2      BYTE  "2.13inch", 0
    demo_text3      BYTE  "Vert" , 0
    demo_text4      BYTE  "vCol" , 0

    demo_text00_000    BYTE  "0,0hz" , 0
    demo_text10_050    BYTE  "10,50hz" , 0
    demo_text20_100    BYTE  "20,100hz" , 0
    demo_text30_200    BYTE  "30,200hz" , 0

PRI text_demo()
    ' demo display text on screen
    '   X: 0-71
    '   Y: 0-171

    eInkDisplay.setBackground(eInkDisplay.EINK_COLOR_WHITE)

    eInkDisplay.setFont(eInkDisplay.FO_HORIZONTAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(0, 0, @demo_text00_000)

    eInkDisplay.setFont(eInkDisplay.FO_HORIZONTAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(10, 50, @demo_text10_050)

    eInkDisplay.setFont(eInkDisplay.FO_HORIZONTAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(20, 100, @demo_text20_100)

    eInkDisplay.setFont(eInkDisplay.FO_HORIZONTAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(30, 200, @demo_text30_200)

{
    eInkDisplay.setFont(eInkDisplay.FO_HORIZONTAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_10)
    eInkDisplay.showTextAtXY(5, 90, @demo_text1)

    eInkDisplay.setFont(eInkDisplay.FO_HORIZONTAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(5, 120, @demo_text2)
'}
{
    eInkDisplay.setFont(eInkDisplay.FO_VERTICAL, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(20, 60, @demo_text3)
'}
{
    eInkDisplay.setFont(eInkDisplay.FO_VERTICAL_COLUMN, eInkDisplay.EINK_COLOR_BLACK, eInkDisplay.FONT_Tahoma_8)
    eInkDisplay.showTextAtXY(5, 80, @demo_text4)
'}
    waitms(5000)


PRI image_demo()
    ' draw our two images to display
    eInkDisplay.showImage(eInkImages.imageAddress(eInkImages.IMAGE_light))
    waitms(1000)

    eInkDisplay.showImage(eInkImages.imageAddress(eInkImages.IMAGE_dark))
    waitms(1000)

    eInkDisplay.showImage(eInkImages.imageAddress(eInkImages.IMAGE_light_180))
    waitms(1000)

    eInkDisplay.showImage(eInkImages.imageAddress(eInkImages.IMAGE_dark_180))
    waitms(1000)



PRI demoRaw()


CON { license }
{{

 -------------------------------------------------------------------------------------------------
  MIT License

  Copyright (c) 2022 Iron Sheep Productions, LLC

  Permission is hereby granted, free of charge, to any person obtaining a copy
  of this software and associated documentation files (the "Software"), to deal
  in the Software without restriction, including without limitation the rights
  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
  copies of the Software, and to permit persons to whom the Software is
  furnished to do so, subject to the following conditions:

  The above copyright notice and this permission notice shall be included in all
  copies or substantial portions of the Software.

  THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
  SOFTWARE.
 =================================================================================================
}}
